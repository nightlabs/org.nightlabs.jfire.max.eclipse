<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.nightlabs.jfire.eclipse</groupId>
	<artifactId>org.nightlabs.jfire.eclipse.parent</artifactId>
	<packaging>pom</packaging>

<!--
	<parent>
		<groupId>org.nightlabs.jfire</groupId>
		<artifactId>org.nightlabs.jfire.parent</artifactId>
		<version>1.2.0-SNAPSHOT</version>
	</parent>

	Is now inherited from 'org.nightlabs.eclipse.parent' and imports dependencyManagenent only from
	'org.nightlabs.jfire.parent'. This is because there are far more settings that are not inherited via
	an import in dependency-management for the eclipse-based-client than there are on the jfire level.
	
	See this parent/import-dependency-management graph:
	
	org.nightlabs.parent ––––––––––––is–parent–of––––––––––––––––––––––> org.nightlabs.eclipse.parent
	       |                                                                        |
	       is                                                                       is
	       |                                                                        |
	       parent                                                                   parent
	       |                                                                        |
	       of                                                                       of
	       |                                                                        |
	       V                                                                        V
	org.nightlabs.jfire.parent –––imported–in–dependency–management–––> org.nightlabs.jfire.eclipse.parent
	       |                                                                        |
	       is                                                                       is
	       |                                                                        |
	       parent                                                                   parent
	       |                                                                        |
	       of                                                                       of
	       |                                                                        |
	       V                                                                        V
    jfire.based.project.parent –––imported–in–dependency–management–––> jfire.base.project.eclipse.parent

	Marco :-)
-->

	<parent>
		<groupId>org.nightlabs.eclipse</groupId>
		<artifactId>org.nightlabs.eclipse.parent</artifactId>
		<version>1.2.0-SNAPSHOT</version>
	</parent>

	<repositories>
		<!--
		Here are only those repositories declared that are needed to download
		the parent-pom.xml (which contains all used repositories).
		
		Important:
		It is recommended that you use a mirror! See the parent-pom for details.
		-->
		<repository>
			<id>dev.nightlabs.org-libs-releases-local</id>
			<url>http://dev.nightlabs.org/maven-repository/libs-releases-local/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>dev.nightlabs.org-libs-snapshots-local</id>
			<url>http://dev.nightlabs.org/maven-repository/libs-snapshots-local/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>
	
<!-- Not needed anymore - see <parent> above. Marco :-)
	<properties>
<!-
We now build against static dependencies and leave the platform-dependent stuff to the assembly only.
The reason is that all our libraries (except for org.nightlabs.eclipse.compatibility.rap/rcp) are platform-agnostic
and it makes therefore no sense to compile them 5 or more times. The only reason to do so is that there might be a mistake
and platform-dependent stuff might be used by error. But this isn't worth the far more complex build configuration and
the much longer build time (factor 5 at least).
We now build solely against RAP, because the feature-set of RAP is smaller than the one of RCP. Hence, we don't need (most of)
the properties anymore.
Marco :-)
-> 
		<org.nightlabs.eclipse.compatibility.artifactId>org.nightlabs.eclipse.compatibility.rap</org.nightlabs.eclipse.compatibility.artifactId>
	</properties>
-->

	<properties>
		<!-- This redeclaration is necessary, because the original declaration is not inherited anymore due to the change of the parent/dependency-management-import-strategy -->
		<jfire.version>${nightlabs.version}</jfire.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- See <parent> above. Marco :-)
				<groupId>org.nightlabs.eclipse</groupId>
				<artifactId>org.nightlabs.eclipse.parent</artifactId>
				-->
				<groupId>org.nightlabs.jfire</groupId>
				<artifactId>org.nightlabs.jfire.parent</artifactId>
				<version>1.2.0-SNAPSHOT</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.nightlabs.jfire.eclipse</groupId>
				<artifactId>org.nightlabs.clientui.ui</artifactId>
				<version>${jfire.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nightlabs.jfire.eclipse</groupId>
				<artifactId>org.nightlabs.jdo.query.ui</artifactId>
				<version>${jfire.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nightlabs.jfire.eclipse</groupId>
				<artifactId>org.nightlabs.jfire.base.j2ee</artifactId>
				<version>${jfire.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nightlabs.jfire.eclipse</groupId>
				<artifactId>org.nightlabs.jfire.base.j2ee.osgi</artifactId>
				<version>${jfire.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nightlabs.jfire.eclipse</groupId>
				<artifactId>org.nightlabs.jfire.base.login.rap.ui</artifactId>
				<version>${jfire.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nightlabs.jfire.eclipse</groupId>
				<artifactId>org.nightlabs.jfire.base.login.rcp.ui</artifactId>
				<version>${jfire.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nightlabs.jfire.eclipse</groupId>
				<artifactId>org.nightlabs.jfire.base.login.ui</artifactId>
				<version>${jfire.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nightlabs.jfire.eclipse</groupId>
				<artifactId>org.nightlabs.jfire.base.ui</artifactId>
				<version>${jfire.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nightlabs.jfire.eclipse</groupId>
				<artifactId>org.nightlabs.jfire.base.admin.ui</artifactId>
				<version>${jfire.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nightlabs.jfire.eclipse</groupId>
				<artifactId>org.nightlabs.jfire.base.intro.ui</artifactId>
				<version>${jfire.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nightlabs.jfire.eclipse</groupId>
				<artifactId>org.nightlabs.jfire.querystore.ui</artifactId>
				<version>${jfire.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nightlabs.jfire.eclipse</groupId>
				<artifactId>org.nightlabs.jdo.query.ui</artifactId>
				<version>${jfire.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nightlabs.jfire.eclipse</groupId>
				<artifactId>org.nightlabs.jfire.base.ui.app.rcp</artifactId>
				<version>${jfire.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nightlabs.jfire.eclipse</groupId>
				<artifactId>org.nightlabs.jfire.errorreport.mantis</artifactId>
				<version>${jfire.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

<!--
	Is now inherited from 'org.nightlabs.eclipse.parent' and imports dependencyManagenent only from
	'org.nightlabs.jfire.parent'. See <parent> above. Marco :-)
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<configuration>
					<instructions>
						<Bundle-SymbolicName>${project.artifactId};singleton:=true</Bundle-SymbolicName>
						<Bundle-Localization>plugin</Bundle-Localization>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>
-->
</project>