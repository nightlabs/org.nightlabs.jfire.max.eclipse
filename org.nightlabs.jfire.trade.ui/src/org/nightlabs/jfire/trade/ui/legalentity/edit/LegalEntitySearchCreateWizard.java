/**
 *
 */
package org.nightlabs.jfire.trade.ui.legalentity.edit;

import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.jface.window.Window;
import org.eclipse.ui.INewWizard;
import org.eclipse.ui.IWorkbench;
import org.nightlabs.base.ui.wizard.DynamicPathWizard;
import org.nightlabs.base.ui.wizard.DynamicPathWizardDialog;
import org.nightlabs.jfire.trade.LegalEntity;

/**
 * @author Alexander Bieber <!-- alex [AT] nightlabs [DOT] de -->
 *
 */
public class LegalEntitySearchCreateWizard extends DynamicPathWizard
implements INewWizard, ILegalEntitySearchWizard {
	// Since 2010.05.07:
	// - This wizard is made to conform to the IWizardDelegate framework.
	// - Related original codes are now in LegalEntitySearchCreateWizardDelegate, registered and
	//   generated by the LegalEntitySearchCreateWizardDelegateFactory.

	@Override
	public void init(IWorkbench workbench, IStructuredSelection selection) {
		// Do nothing. See notes above.
	}


	// We need a reference from the Wizard to return the value of the LegalEntity selected by
	// the user from the UI.
	private LegalEntity legalEntity;

	@Override
	public void setLegalEntity(LegalEntity legalEntity) { this.legalEntity = legalEntity; }

	@Override
	public LegalEntity getLegalEntity() { return legalEntity; }



	// These are Wizard specificities, in order to make this seamlessly adaptable to the
	// new wizard-framework. Basically, these just hold values to internal variables.
	private String quickSearchText;
	private boolean allowNewLegalEntityCreation;
	private boolean allowEditLegalEntity;

	public LegalEntitySearchCreateWizard(String quickSearchText, boolean allowNewLegalEntityCreation, boolean allowEditLegalEntity) {
		this.quickSearchText = quickSearchText;
		this.allowNewLegalEntityCreation = allowNewLegalEntityCreation;
		this.allowEditLegalEntity = allowEditLegalEntity;
	}

	public LegalEntitySearchCreateWizard(String quickSearchText) {
		this(quickSearchText, true, false);
	}

	public LegalEntitySearchCreateWizard(String quickSearchText, boolean allowNewLegalEntityCreation) {
		this(quickSearchText, allowNewLegalEntityCreation, false);
	}


	@Override
	public String getQuickSearchText() { return quickSearchText; }

	@Override
	public boolean getAllowNewLegalEntityCreation() { return allowNewLegalEntityCreation; }

	@Override
	public boolean getAllowEditLegalEntity() { return allowEditLegalEntity; }





	// <-- ABOUT TO BE RELEGATED to the LegalEntitySearchCreateWizardDelegate.
	//     ALSO NOTE: There are 2 static methods below, based on the original LegalEntitySearchCreateWizard.
//	private PersonSearchWizardPage personSearchWizardPage;
//	private LegalEntity legalEntity;
//
//	public LegalEntitySearchCreateWizard(String quickSearchText,
//			boolean allowNewLegalEntityCreation, boolean allowEditLegalEnity)
//	{
//		personSearchWizardPage = new PersonSearchWizardPage(quickSearchText, allowNewLegalEntityCreation, allowEditLegalEnity);
//		addPage(personSearchWizardPage);
//		setWindowTitle(Messages.getString("org.nightlabs.jfire.trade.ui.legalentity.edit.LegalEntitySearchCreateWizard.windowsTitle")); //$NON-NLS-1$
//	}
//
//	public LegalEntitySearchCreateWizard(String quickSearchText)
//	{
//		this(quickSearchText, true, false);
//	}
//
//	public LegalEntitySearchCreateWizard(String quickSearchText, boolean allowNewLegalEntityCreation)
//	{
//		this(quickSearchText, allowNewLegalEntityCreation, false);
//	}
//
//
//	/** {@inheritDoc}
//	 */
//	@Override
//	public boolean performFinish() {
//		Person selectedPerson = personSearchWizardPage.getSelectedPerson();
//		try {
//			TradeManagerRemote tradeManager = JFireEjb3Factory.getRemoteBean(TradeManagerRemote.class, Login.getLogin().getInitialContextProperties());
//			legalEntity = tradeManager.storePersonAsLegalEntity(selectedPerson, true, LegalEntityPersonEditor.FETCH_GROUPS_FULL_LE_DATA,
//					NLJDOHelper.MAX_FETCH_DEPTH_NO_LIMIT);
//		} catch (Exception e) {
//			throw new RuntimeException(e);
//		}
//		return true;
//	}
//
//	/**
//	 * Returns the {@link LegalEntity} this Wizard found.
//	 * This will only be set after {@link #performFinish()}
//	 * successfully finished.
//	 * @return The {@link LegalEntity} this Wizard found.
//	 */
//	public LegalEntity getLegalEntity() {
//		return legalEntity;
//	}

	/**
	 * Opens the wizard and returns the {@link LegalEntity}
	 * the user found or created.
	 *
	 * @param quickSearchText The text to search for instantly.
	 * @param allowNewLegalEntityCreation Whether the user should be able to create a new Person/LegalEntity in the wizard.
	 * @return The found or newly created {@link LegalEntity}.
	 */
	public static LegalEntity open(String quickSearchText, boolean allowNewLegalEntityCreation) {
		return open(quickSearchText, allowNewLegalEntityCreation, false);
	}

	/**
	 * Opens the wizard and returns the {@link LegalEntity}
	 * the user found or created.
	 *
	 * @param quickSearchText The text to search for instantly.
	 * @param allowNewLegalEntityCreation Whether the user should be able to create a new Person/LegalEntity in the wizard.
	 * @param allowEditLegalEntity Whether the user should be able to edit a selected person in the wizard
	 * @return The found or newly created {@link LegalEntity}.
	 */
	public static LegalEntity open(String quickSearchText, boolean allowNewLegalEntityCreation, boolean allowEditLegalEntity)
	{
//		LegalEntitySearchCreateWizard wiz = new LegalEntitySearchCreateWizard(quickSearchText, allowNewLegalEntityCreation, allowEditLegalEntity);

		// By the logic of the new wizard-framework, this is enough to trigger the correct wizard/wizard-page.
		// HOWEVER, we loose the chance to place in the given parameters!
		// --> Solution: There is now a mechanism in place in the corresponding wizard-delegate, placed inside the method
		//               of createPageProvider(), that references an ILegalEntitySearchWizard appropriately to setup the variables
		//               with respect to the input parameters.
		LegalEntitySearchCreateWizard wiz = new LegalEntitySearchCreateWizard(quickSearchText, allowNewLegalEntityCreation, allowEditLegalEntity);
		DynamicPathWizardDialog dlg = new DynamicPathWizardDialog(wiz);

		if (dlg.open() == Window.OK) {
			return wiz.getLegalEntity();
		}
		return null;
	}

}
